üóìÔ∏è Plan de Estudio de 7 D√≠as
D√≠a 1 ‚Äì Fundamentos de Estructuras de Datos
Teor√≠a:

¬øQu√© es una estructura de datos?

Tipos primitivos vs. estructuras de datos.

Listas, pilas, colas, conjuntos, diccionarios (hashmaps).

Pr√°ctica:

Crear una lista y recorrerla.

Implementar una pila y una cola con listas.

Ejercicio clave:

Simular una fila en una panader√≠a (cola FIFO).

D√≠a 2 ‚Äì Arreglos y Listas Enlazadas
Teor√≠a:

Diferencias entre arreglos (arrays) y listas enlazadas.

Tipos: simple, doble y circular.

Pr√°ctica:

Implementar una lista enlazada simple desde cero.

Ejercicio clave:

Insertar, eliminar y buscar elementos en una lista enlazada.

D√≠a 3 ‚Äì Pilas y Colas
Teor√≠a:

LIFO vs FIFO.

Casos de uso comunes.

Pr√°ctica:

Implementar pila con push y pop.

Implementar cola con enqueue y dequeue.

Ejercicio clave:

Verificar balanceo de par√©ntesis con una pila.

D√≠a 4 ‚Äì √Årboles y Grafos (b√°sico)
Teor√≠a:

¬øQu√© es un √°rbol? Nodo, ra√≠z, hojas.

√Årbol binario vs. √°rbol binario de b√∫squeda.

Qu√© es un grafo, tipos de representaci√≥n.

Pr√°ctica:

Implementar un √°rbol binario b√°sico e insertar nodos.

Ejercicio clave:

Recorridos en profundidad: inorden, preorden, postorden.

D√≠a 5 ‚Äì Fundamentos de Programaci√≥n Orientada a Objetos
Teor√≠a:

Clases y objetos.

Encapsulamiento, herencia, polimorfismo, abstracci√≥n.

Pr√°ctica:

Crear una clase Animal y subclases Perro y Gato.

Ejercicio clave:

Usar herencia para reutilizar c√≥digo.

D√≠a 6 ‚Äì POO Avanzado y Pr√°ctica Mixta
Teor√≠a:

M√©todos est√°ticos, clases abstractas, interfaces.

Principios SOLID (introductorio).

Pr√°ctica:

Implementar una interfaz y m√∫ltiples clases que la usen.

Ejercicio clave:

Simular un sistema de transporte con clases abstractas.

D√≠a 7 ‚Äì Simulacro de Examen + Revisi√≥n
Simulacro:

2 ejercicios de estructuras de datos.

2 ejercicios de programaci√≥n orientada a objetos.

1 ejercicio integrador.

Revisi√≥n:

Repasar errores.

Rehacer ejercicios dif√≠ciles.

Anotar dudas clave.

Recursos recomendados
Visualgo.net ‚Äì Visualizador de estructuras de datos.

leetcode.com ‚Äì Ejercicios para practicar.

Programiz ‚Äì Teor√≠a + pr√°ctica en l√≠nea.

Lenguaje sugerido: Python o Java (dependiendo del lenguaje del bootcamp).